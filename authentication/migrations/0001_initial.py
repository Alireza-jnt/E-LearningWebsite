# Generated by Django 5.1.4 on 2024-12-21 22:08

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('gender', models.BooleanField(choices=[(True, 'Male'), (False, 'Female')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='NotificationTypes',
            fields=[
                ('notification_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=255)),
                ('notification_type_category', models.CharField(choices=[('course', 'Course'), ('account', 'Account'), ('marketing', 'Marketing'), ('interaction', 'Interaction'), ('system', 'System')], default='system', max_length=15)),
                ('default_enabled', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('permission_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('permission_path', models.CharField(max_length=255)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'permissions',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='UserInformation',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('street_number', models.TextField(blank=True, null=True)),
                ('street_name', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('profile_picture', models.ImageField(null=True, upload_to='profile_pics/')),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('language', models.CharField(default='en', max_length=50)),
                ('dark_mode', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'information',
            },
        ),
        migrations.CreateModel(
            name='PermissionInRole',
            fields=[
                ('permission_in_role_id', models.AutoField(primary_key=True, serialize=False)),
                ('permission_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.permission')),
                ('role_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.role')),
            ],
            options={
                'db_table': 'permission_in_role',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='authentication.role'),
        ),
        migrations.CreateModel(
            name='UserCategoryPreferences',
            fields=[
                ('user_preferred_categories_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('category_type', models.IntegerField()),
                ('is_premium_selection', models.BooleanField(default=False)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserNotificationPreferences',
            fields=[
                ('user_notification_preference_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_enabled', models.BooleanField(default=True)),
                ('frequency', models.CharField(choices=[('immediate', 'Immediate'), ('never', 'Never'), ('daily', 'Daily'), ('weekly', 'Weekly')], max_length=10)),
                ('notification_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.notificationtypes')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
